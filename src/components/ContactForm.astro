<form id="contactForm">
  <label>
    名前:
    <input type="text" name="name" placeholder="お名前" required />
  </label>
  <label>
    Email:
    <input type="email" name="email" placeholder="メールアドレス" required />
  </label>
  <label>
    内容:
    <textarea name="message" placeholder="メッセージ" required></textarea>
  </label>
  <button type="submit">送信</button>
</form>

<script>
  import nodemailer from 'nodemailer';
  import { google } from 'googleapis';

  // Google Sheets APIの認証設定
  const auth = new google.auth.GoogleAuth({
    keyFile: 'google-service-key-AstroContactForm.json', // サービスアカウントキーのファイルパス
    scopes: ['https://www.googleapis.com/auth/spreadsheets'], // 使用するGoogle APIのスコープ
  });

  // Google Sheets APIクライアントの作成
  const sheets = google.sheets({ version: 'v4', auth });

  // スプレッドシートのIDを設定（スプレッドシートのURLから取得）
  const SPREADSHEET_ID = '1vNlzZXsUzC9B1PJdPg9-TLvgW8gD4__n74-9shL0R6Q';

  // 型アサーションを使用して明示的に型を指定
  const form = document.getElementById('contactForm') as HTMLFormElement | null;

  if (form) {
    form.addEventListener('submit', async (event) => {
      event.preventDefault();

      // `form`を型アサーションした上で`FormData`を作成
      const formData = new FormData(form);

      // 必須項目の値を取得し、nullチェックを行う
      const email = formData.get('email');
      const name = formData.get('name');
      const message = formData.get('message');

      if (!email || !name || !message || typeof email !== 'string' || typeof name !== 'string' || typeof message !== 'string') {
        alert('すべての項目を正しく入力してください');
        return;
      }

      const data = {
        name,
        email,
        message,
      };

      try {
        // --- ① Google Sheetsにデータを保存 ---
        const sheetsResponse = await sheets.spreadsheets.values.append({
          spreadsheetId: SPREADSHEET_ID, // スプレッドシートのID
          range: 'testForm!A2', // データを追加するシート名とセル範囲
          valueInputOption: 'RAW', // 入力オプション（RAWはそのまま保存）
          requestBody: {
            values: [
              [new Date().toLocaleString('ja-JP', { timeZone: 'Asia/Tokyo' }), name, email, message],
              // スプレッドシートに保存するデータ(A列:日時, B列:名前, C列:メールアドレス, D列:内容)
            ],
          },
        });
        console.log('スプレッドシートにデータを保存しました:', sheetsResponse.data);

        // --- ② Nodemailerでメールを送信 ---
        // NodemailerのSMTP設定
        const transporter = nodemailer.createTransport({
          host: 'smtp.gmail.com', // GmailのSMTPホスト
          port: 587, // SMTPポート
          secure: false, // TLSを使用する場合はfalse
          auth: {
            user: import.meta.env.SMTP_USER, // 環境変数に設定されたSMTPユーザー
            pass: import.meta.env.SMTP_PASS, // 環境変数に設定されたSMTPパスワード
          },
        });

        // サイト管理者への通知メール
        await transporter.sendMail({
          from: import.meta.env.SMTP_USER, // 環境変数に設定された送信元メールアドレス
          to: 'naoue007@gmail.com', // 管理者のメールアドレス
          subject: '新しいお問い合わせがあります',
          text: `名前: ${name}\nメールアドレス: ${email}\nメッセージ:\n${message}`,
        });

        // 問い合わせ者への確認メール
        await transporter.sendMail({
          from: import.meta.env.SMTP_USER, // 環境変数に設定された送信元メールアドレス
          to: email, // 問い合わせ者のメールアドレス
          subject: 'お問い合わせを受け付けました',
          text: `こんにちは ${name}さん,\n\nお問い合わせありがとうございます。内容を確認しました。\n\nご返信をお待ちください。\n\nメッセージ:\n${message}`,
        });

        // --- 正常終了時の処理 ---
        alert('お問い合わせが送信されました！');
      } catch (error) {
        console.error('エラーが発生しました:', error);
        alert(`送信中にエラーが発生しました: ${error.message}`);
      }
    });
  } else {
    console.error("フォームが見つかりません。'contactForm' のIDが正しいか確認してください。");
  }
</script>



<style>
  form {
    background: #fff;
    padding: 2em;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 400px;
    margin: auto;
  }
  label {
    display: block;
    margin-bottom: 1em;
    font-weight: bold;
    color: #333;
  }
  input,
  textarea {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
  }
  input:focus,
  textarea:focus {
    border-color: #007bff;
    outline: none;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
  }
  button {
    display: block;
    width: 100%;
    padding: 10px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  button:hover {
    background-color: #0056b3;
  }
</style>
